#!/bin/bash

binaryName=312510224.o
testDir=("Jimmy_Testcase" "OpenCase" "Zip_Testcase")
PATNUM=6

# compile necessary files
compile() {
    make clean > make.log
    make > make.log
    echo -e "Generate verifier..."
    g++ -std=c++11 checker/verifier.cpp -o verifier

    echo -e "Generate writeProg..."
    g++ -std=c++11 checker/writeProg.cpp -o writeProg

    echo -e "Generate changeType..."
    g++ -std=c++11 checker/changeType.cpp -o changeType
}

# clean and prepare directories
prepare_directories() {
    for dir in outputResult checkResult; do
        [ -d "$dir" ] && rm -rf "$dir"
        mkdir "$dir"
    done
}

# run tests for a given test case
run_tests() {
    local caseDir=$1
    local casePath="outputResult/$caseDir"
    mkdir "$casePath"
    echo -e "\033[0;34m$caseDir\033[0m"
    
    for ((i = 1; i <= PATNUM; i++)); do
        ./$binaryName "testcase/$caseDir/input${i}.txt" "$casePath/output${i}.txt"
        ./verifier "testcase/$caseDir/tmp/output${i}.txt" "$casePath/output${i}.txt" > checkResult/check.log
        
        if grep -iq "congratulations, correct answer!" checkResult/check.log; then
            checkCovering "$casePath" "$caseDir" "$i"
        else
            echo -e "\033[31m--- Check Fail ---\033[0m"
            cleanup
            exit 1
        fi
    done
}

# failure handling
checkCovering() {
    local casePath=$1
    local caseDir=$2
    local patternNo=$3
    
    ./changeType "$casePath/output${patternNo}.txt"
    ./writeProg "testcase/$caseDir/input${patternNo}.txt"
    g++ -std=c++11 onsetCoverChecker.cpp -o onsetCoverChecker
    ./onsetCoverChecker > checkResult/onsetCoverChecker.log
    
    if grep -iq "The Boolean function covers the specified on-set." checkResult/onsetCoverChecker.log; then
        echo -e "\033[0;34mPass  \033[m  \033[0;32mPattern No.$i \033[0m"
    else
        echo -e "\033[31m--- Check Fail ---\033[0m"
        cleanup
        exit 1
    fi
}

cleanup() {
    make clean > make.log
    rm -f make.log changeType.txt verifier writeProg changeType onsetCoverChecker.cpp onsetCoverChecker
    rm -rf checkResult
}

# Main script
echo -e "Compile necessory files..."
compile
prepare_directories

for testCase in "${testDir[@]}"; do
    run_tests "$testCase"
done

# Reminder
echo -e "\033[0;32mCongratulation!! You have passed all patterns. \033[0m"
echo -e "\033[31mReminder: \033[0mThis checker does not check following terms:"
echo -e "          1. Correction of prime implicants"
echo -e "          2. Sequence of minimum covering"

cleanup
